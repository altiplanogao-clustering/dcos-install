# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
COREOS_URL_TEMPLATE = "https://storage.googleapis.com/%s.release.core-os.net/amd64-usr/current/coreos_production_vagrant.json"

SUPPORTED_OS = {
  "ubuntu-16" => {box: "bento/ubuntu-16.04",  box_v: ""},
  "centos-7"  => {box: "centos/7",            box_v: ""},
}

$subnet = "192.168.111"
$num_instances = 3
$vm_memory = 2048
$vm_cpus = 2
$instance_name_prefix = "dcos"
oses = [
  "centos-7",
]

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.box_check_update = false


  max_id = $num_instances - 1
  (0..max_id).each do |i|
     ip = 100 + i
    config.vm.define node_name = "%s-%02d" % [$instance_name_prefix, i] do |node|
      node.vm.hostname = node_name

      os = SUPPORTED_OS[oses[i % oses.length]]
      node.vm.box = os[:box]
      if os.has_key? :box_v
        node.vm.box_version = os[:box_v]
      end

      node.vm.network "private_network" , ip: "#{$subnet}.#{ip}"
      node.vm.provider "virtualbox" do |v|
        v.name = node_name
        v.cpus = $vm_cpus
        v.memory = $vm_memory
      end
      # copy private key so hosts can ssh using key authentication (the script below sets permissions to 600)
      node.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "host_id_rsa.pub"
      node.vm.provision "shell", path: "bootstrap.sh"
    end
  end
end
